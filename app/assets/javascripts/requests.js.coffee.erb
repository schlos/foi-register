# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://jashkenas.github.com/coffee-script/

$ ->
  requestor_id = $ '#request_requestor_attributes_id'
  requestor_email = $ '#request_requestor_attributes_email'
  
  $('#request_requestor_attributes_name').autocomplete({
    source: "/ajax/requestors"
  }).bind("autocompletefocus", (event, ui) ->
    requestor_email.val ui.item.email
  ).bind("autocompleteselect", (event, ui) ->
    requestor_email.attr("disabled", true).val(ui.item.email)
    requestor_id.val ui.item.id
  ).bind("change", (event) ->
    if requestor_id.val()
      requestor_id.val("")
      requestor_email.removeAttr("disabled").val("")
  )
  
  lgcs_term_id = $ '#request_lgcs_term_id'
  lgcs_term = $ '#request_lgcs_term'
  
  lgcs_term.autocomplete({
    source: "<%= MySociety::Config::get("ADMIN_PREFIX", "/admin") %>/ajax/lgcs_terms"
  })
  .bind "autocompleteselect", (event, ui) ->
    lgcs_term_id.val ui.item.id
    lgcs_term.blur()
  .bind "focus", (event) ->
    lgcs_term.val ""
    lgcs_term_id.val ""
  .bind "blur", (event) ->
    lgcs_term.val("") if !lgcs_term_id.val()
  
  state_select = $ '#request_state'
  state_description = $ '#state-description'
  nondisclosure_reason = $ '#nondisclosure_reason-field'
  nondisclosure_reason_select = $ '#request_nondisclosure_reason'
  nondisclosure_reason_description = $ '#nondisclosure_reason-description'
  state_select.bind "change", (ev) ->
    new_state = state_select.val()
    state_description.text(state_select.find("option[value=" + new_state + "]").attr("title"))
    if new_state == "not_disclosed"
      nondisclosure_reason.show()
    else
      nondisclosure_reason.hide()
  nondisclosure_reason_select.bind "change", (ev) ->
    nondisclosure_reason_description.text(
      nondisclosure_reason_select.find(
        "option[value=" + nondisclosure_reason_select.val() + "]"
      ).attr("title")
    )

  $('span.state').tooltip()

  # Type-ahead search when creating a new request
  tar = $("#typeahead_response")
  if tar.length > 0
    $("#request_title").keypress($.debounce( 300, () ->
      $.get("/requests/search_typeahead?q=" + encodeURIComponent(this.value), (result) ->
        if result && result.length > 0
          tar.show().html "<h2>Possibly related requests</h2>"
          $.each result, (i, e) ->
            tar.append($("<a target='other-request'/>").attr("href", "/requests/" + e.id).text(e.title), "<br>")
        else
          tar.hide()
      )
    ))
  
  # Datepicker for request due date
  $('#request_due_date').datepicker({"dateFormat": "dd/mm/yy"})

  # In-place state editing for request state
  $('#admin-request-list .admin-request-state').dblclick () ->
    $this = $ this
    $this.find(".label").hide()
    $this.find(".state-editor").show()
  .mouseup () ->
    return false
  $('#admin-request-list .admin-request-state .state-editor select').change () ->
    $this = $ this
    $td = $this.closest "td"
    request_id = $this.closest("tr").attr("id").substring("request-".length)
    $.post("<%= MySociety::Config::get('ADMIN_PREFIX', '/admin') %>/requests/" + request_id + "/update_state.json", {
        "state": $this.val()
      }, (d) ->
        if d.ok
          $td.find(".label").show().text(d.name).data("original-title", d.description)
          $td.find(".state-editor").hide()
        else
          alert("Failed to change the state")
          $td.find(".label").show()
          $td.find(".state-editor").hide()
    )
  
  # Request is published
  $r_u_s = $('#reason_for_unpublishing_section')
  $r_u = $('#reason_for_unpublishing')
  $r_i_p = $('#request_is_published')
  if $r_u_s.length > 0
    $r_i_p.change () ->
      if !$r_i_p.is(":checked")
        $r_u_s.show()
        $r_u.select()
      else
        $r_u_s.hide()
    
    $("form.edit_request").submit (e) ->
      if !$r_i_p.is(":checked") && !$r_u.val()
        $r_u_s.css("background-color", "red").animate({"background-color": "#ccc"}, 500);
        $r_u.select()
        return false
      return true

  # Category chooser
  $("#form-category-chooser").submit () ->
    return false
  $("#form-category-chooser-category").change (e) ->
    category_id = $("#form-category-chooser-category").val()
    document.location.href = "/requests/category/" + category_id
  